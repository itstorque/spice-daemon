from pathlib import Path

from helpers.file_interface import File

class Simulation():
    
    def __init__(self, T, STEPS, params={}, opt_params={"reltol": 1e-6}, folder_path=".", folder_name=".spice-daemon-data"):
        
        self.T     = T
        self.STEPS = STEPS
        
        self.params     = params
        self.opt_params = opt_params
        
        self.folder_name = folder_name
        self.folder_path = Path(folder_path)
        
        self.tran_file = File(self.folder_path / self.folder_name)
        
        self.modules = set()
        self.toolkits = set()
        
    def update_tran_file(self):
        # Generates a tran file "trancmd.txt" in daemon_loc
        
        contents = f"""** GENERATED BY SPICE-DAEMON **\n
.param T {self.T}
.param STEPS {self.STEPS}
.param STEPSIZE {self.T/self.STEPS}\n\n"""

        for key, value in self.params.items():
            contents += f".param {key} {value}\n"

        for key, value in self.opt_params.items():
            contents += f".option {key} {value}\n"
        
        return self.tran_file.write(contents)
    
    def generate_modules(self):
        raise NotImplementedError
        
    def process_toolkits(self):
        raise NotImplementedError
    
    def add_module(self, module):
        self.modules.add(module)
    
    def add_toolkit(self, toolkit):
        self.toolkits.add(toolkit)
        
    def checking_hook(self)